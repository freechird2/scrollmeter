{"version":3,"file":"index.cjs","sources":["../../node_modules/html-to-image/es/util.js","../../node_modules/html-to-image/es/clone-pseudos.js","../../node_modules/html-to-image/es/mimes.js","../../node_modules/html-to-image/es/dataurl.js","../../node_modules/html-to-image/es/clone-node.js","../../node_modules/html-to-image/es/embed-resources.js","../../node_modules/html-to-image/es/embed-images.js","../../node_modules/html-to-image/es/apply-style.js","../../node_modules/html-to-image/es/embed-webfonts.js","../../node_modules/html-to-image/es/index.js","../src/types/scrollmeter.types.ts","../src/class/scrollmeter-tooltip.ts","../src/class/scrollmeter-timeline.ts","../src/class/scrollmeter.ts","../src/index.ts"],"sourcesContent":["export function resolveUrl(url, baseUrl) {\n    // url is absolute already\n    if (url.match(/^[a-z]+:\\/\\//i)) {\n        return url;\n    }\n    // url is absolute already, without protocol\n    if (url.match(/^\\/\\//)) {\n        return window.location.protocol + url;\n    }\n    // dataURI, mailto:, tel:, etc.\n    if (url.match(/^[a-z]+:/i)) {\n        return url;\n    }\n    const doc = document.implementation.createHTMLDocument();\n    const base = doc.createElement('base');\n    const a = doc.createElement('a');\n    doc.head.appendChild(base);\n    doc.body.appendChild(a);\n    if (baseUrl) {\n        base.href = baseUrl;\n    }\n    a.href = url;\n    return a.href;\n}\nexport const uuid = (() => {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => \n    // eslint-disable-next-line no-bitwise\n    `0000${((Math.random() * 36 ** 4) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport function delay(ms) {\n    return (args) => new Promise((resolve) => {\n        setTimeout(() => resolve(args), ms);\n    });\n}\nexport function toArray(arrayLike) {\n    const arr = [];\n    for (let i = 0, l = arrayLike.length; i < l; i++) {\n        arr.push(arrayLike[i]);\n    }\n    return arr;\n}\nfunction px(node, styleProperty) {\n    const win = node.ownerDocument.defaultView || window;\n    const val = win.getComputedStyle(node).getPropertyValue(styleProperty);\n    return val ? parseFloat(val.replace('px', '')) : 0;\n}\nfunction getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.clientWidth + leftBorder + rightBorder;\n}\nfunction getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.clientHeight + topBorder + bottomBorder;\n}\nexport function getImageSize(targetNode, options = {}) {\n    const width = options.width || getNodeWidth(targetNode);\n    const height = options.height || getNodeHeight(targetNode);\n    return { width, height };\n}\nexport function getPixelRatio() {\n    let ratio;\n    let FINAL_PROCESS;\n    try {\n        FINAL_PROCESS = process;\n    }\n    catch (e) {\n        // pass\n    }\n    const val = FINAL_PROCESS && FINAL_PROCESS.env\n        ? FINAL_PROCESS.env.devicePixelRatio\n        : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (Number.isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\n// @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas#maximum_canvas_size\nconst canvasDimensionLimit = 16384;\nexport function checkCanvasDimensions(canvas) {\n    if (canvas.width > canvasDimensionLimit ||\n        canvas.height > canvasDimensionLimit) {\n        if (canvas.width > canvasDimensionLimit &&\n            canvas.height > canvasDimensionLimit) {\n            if (canvas.width > canvas.height) {\n                canvas.height *= canvasDimensionLimit / canvas.width;\n                canvas.width = canvasDimensionLimit;\n            }\n            else {\n                canvas.width *= canvasDimensionLimit / canvas.height;\n                canvas.height = canvasDimensionLimit;\n            }\n        }\n        else if (canvas.width > canvasDimensionLimit) {\n            canvas.height *= canvasDimensionLimit / canvas.width;\n            canvas.width = canvasDimensionLimit;\n        }\n        else {\n            canvas.width *= canvasDimensionLimit / canvas.height;\n            canvas.height = canvasDimensionLimit;\n        }\n    }\n}\nexport function canvasToBlob(canvas, options = {}) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => {\n            canvas.toBlob(resolve, options.type ? options.type : 'image/png', options.quality ? options.quality : 1);\n        });\n    }\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas\n            .toDataURL(options.type ? options.type : undefined, options.quality ? options.quality : undefined)\n            .split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], {\n            type: options.type ? options.type : 'image/png',\n        }));\n    });\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.decode = () => resolve(img);\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n        img.crossOrigin = 'anonymous';\n        img.decoding = 'async';\n        img.src = url;\n    });\n}\nexport async function svgToDataURL(svg) {\n    return Promise.resolve()\n        .then(() => new XMLSerializer().serializeToString(svg))\n        .then(encodeURIComponent)\n        .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n}\nexport async function nodeToDataURL(node, width, height) {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n    svg.setAttribute('width', `${width}`);\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n    foreignObject.setAttribute('width', '100%');\n    foreignObject.setAttribute('height', '100%');\n    foreignObject.setAttribute('x', '0');\n    foreignObject.setAttribute('y', '0');\n    foreignObject.setAttribute('externalResourcesRequired', 'true');\n    svg.appendChild(foreignObject);\n    foreignObject.appendChild(node);\n    return svgToDataURL(svg);\n}\nexport const isInstanceOfElement = (node, instance) => {\n    if (node instanceof instance)\n        return true;\n    const nodePrototype = Object.getPrototypeOf(node);\n    if (nodePrototype === null)\n        return false;\n    return (nodePrototype.constructor.name === instance.name ||\n        isInstanceOfElement(nodePrototype, instance));\n};\n//# sourceMappingURL=util.js.map","import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n    const content = style.getPropertyValue('content');\n    return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\nfunction formatCSSProperties(style) {\n    return toArray(style)\n        .map((name) => {\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? ' !important' : ''};`;\n    })\n        .join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText\n        ? formatCSSText(style)\n        : formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue('content');\n    if (content === '' || content === 'none') {\n        return;\n    }\n    const className = uuid();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    }\n    catch (err) {\n        return;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    clonePseudoElement(nativeNode, clonedNode, ':before');\n    clonePseudoElement(nativeNode, clonedNode, ':after');\n}\n//# sourceMappingURL=clone-pseudos.js.map","const WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n    webp: 'image/webp',\n};\nfunction getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const extension = getExtension(url).toLowerCase();\n    return mimes[extension] || '';\n}\n//# sourceMappingURL=mimes.js.map","function getContentFromDataUrl(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function makeDataUrl(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport async function fetchAsDataURL(url, init, process) {\n    const res = await fetch(url, init);\n    if (res.status === 404) {\n        throw new Error(`Resource \"${res.url}\" not found`);\n    }\n    const blob = await res.blob();\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = () => {\n            try {\n                resolve(process({ res, result: reader.result }));\n            }\n            catch (error) {\n                reject(error);\n            }\n        };\n        reader.readAsDataURL(blob);\n    });\n}\nconst cache = {};\nfunction getCacheKey(url, contentType, includeQueryParams) {\n    let key = url.replace(/\\?.*/, '');\n    if (includeQueryParams) {\n        key = url;\n    }\n    // font resource\n    if (/ttf|otf|eot|woff2?/i.test(key)) {\n        key = key.replace(/.*\\//, '');\n    }\n    return contentType ? `[${contentType}]${key}` : key;\n}\nexport async function resourceToDataURL(resourceUrl, contentType, options) {\n    const cacheKey = getCacheKey(resourceUrl, contentType, options.includeQueryParams);\n    if (cache[cacheKey] != null) {\n        return cache[cacheKey];\n    }\n    // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n    if (options.cacheBust) {\n        // eslint-disable-next-line no-param-reassign\n        resourceUrl += (/\\?/.test(resourceUrl) ? '&' : '?') + new Date().getTime();\n    }\n    let dataURL;\n    try {\n        const content = await fetchAsDataURL(resourceUrl, options.fetchRequestInit, ({ res, result }) => {\n            if (!contentType) {\n                // eslint-disable-next-line no-param-reassign\n                contentType = res.headers.get('Content-Type') || '';\n            }\n            return getContentFromDataUrl(result);\n        });\n        dataURL = makeDataUrl(content, contentType);\n    }\n    catch (error) {\n        dataURL = options.imagePlaceholder || '';\n        let msg = `Failed to fetch resource: ${resourceUrl}`;\n        if (error) {\n            msg = typeof error === 'string' ? error : error.message;\n        }\n        if (msg) {\n            console.warn(msg);\n        }\n    }\n    cache[cacheKey] = dataURL;\n    return dataURL;\n}\n//# sourceMappingURL=dataurl.js.map","import { clonePseudoElements } from './clone-pseudos';\nimport { createImage, toArray, isInstanceOfElement } from './util';\nimport { getMimeType } from './mimes';\nimport { resourceToDataURL } from './dataurl';\nasync function cloneCanvasElement(canvas) {\n    const dataURL = canvas.toDataURL();\n    if (dataURL === 'data:,') {\n        return canvas.cloneNode(false);\n    }\n    return createImage(dataURL);\n}\nasync function cloneVideoElement(video, options) {\n    if (video.currentSrc) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = video.clientWidth;\n        canvas.height = video.clientHeight;\n        ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const dataURL = canvas.toDataURL();\n        return createImage(dataURL);\n    }\n    const poster = video.poster;\n    const contentType = getMimeType(poster);\n    const dataURL = await resourceToDataURL(poster, contentType, options);\n    return createImage(dataURL);\n}\nasync function cloneIFrameElement(iframe) {\n    var _a;\n    try {\n        if ((_a = iframe === null || iframe === void 0 ? void 0 : iframe.contentDocument) === null || _a === void 0 ? void 0 : _a.body) {\n            return (await cloneNode(iframe.contentDocument.body, {}, true));\n        }\n    }\n    catch (_b) {\n        // Failed to clone iframe\n    }\n    return iframe.cloneNode(false);\n}\nasync function cloneSingleNode(node, options) {\n    if (isInstanceOfElement(node, HTMLCanvasElement)) {\n        return cloneCanvasElement(node);\n    }\n    if (isInstanceOfElement(node, HTMLVideoElement)) {\n        return cloneVideoElement(node, options);\n    }\n    if (isInstanceOfElement(node, HTMLIFrameElement)) {\n        return cloneIFrameElement(node);\n    }\n    return node.cloneNode(false);\n}\nconst isSlotElement = (node) => node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\nasync function cloneChildren(nativeNode, clonedNode, options) {\n    var _a, _b;\n    let children = [];\n    if (isSlotElement(nativeNode) && nativeNode.assignedNodes) {\n        children = toArray(nativeNode.assignedNodes());\n    }\n    else if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n        ((_a = nativeNode.contentDocument) === null || _a === void 0 ? void 0 : _a.body)) {\n        children = toArray(nativeNode.contentDocument.body.childNodes);\n    }\n    else {\n        children = toArray(((_b = nativeNode.shadowRoot) !== null && _b !== void 0 ? _b : nativeNode).childNodes);\n    }\n    if (children.length === 0 ||\n        isInstanceOfElement(nativeNode, HTMLVideoElement)) {\n        return clonedNode;\n    }\n    await children.reduce((deferred, child) => deferred\n        .then(() => cloneNode(child, options))\n        .then((clonedChild) => {\n        if (clonedChild) {\n            clonedNode.appendChild(clonedChild);\n        }\n    }), Promise.resolve());\n    return clonedNode;\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n    const targetStyle = clonedNode.style;\n    if (!targetStyle) {\n        return;\n    }\n    const sourceStyle = window.getComputedStyle(nativeNode);\n    if (sourceStyle.cssText) {\n        targetStyle.cssText = sourceStyle.cssText;\n        targetStyle.transformOrigin = sourceStyle.transformOrigin;\n    }\n    else {\n        toArray(sourceStyle).forEach((name) => {\n            let value = sourceStyle.getPropertyValue(name);\n            if (name === 'font-size' && value.endsWith('px')) {\n                const reducedFont = Math.floor(parseFloat(value.substring(0, value.length - 2))) - 0.1;\n                value = `${reducedFont}px`;\n            }\n            if (isInstanceOfElement(nativeNode, HTMLIFrameElement) &&\n                name === 'display' &&\n                value === 'inline') {\n                value = 'block';\n            }\n            if (name === 'd' && clonedNode.getAttribute('d')) {\n                value = `path(${clonedNode.getAttribute('d')})`;\n            }\n            targetStyle.setProperty(name, value, sourceStyle.getPropertyPriority(name));\n        });\n    }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLTextAreaElement)) {\n        clonedNode.innerHTML = nativeNode.value;\n    }\n    if (isInstanceOfElement(nativeNode, HTMLInputElement)) {\n        clonedNode.setAttribute('value', nativeNode.value);\n    }\n}\nfunction cloneSelectValue(nativeNode, clonedNode) {\n    if (isInstanceOfElement(nativeNode, HTMLSelectElement)) {\n        const clonedSelect = clonedNode;\n        const selectedOption = Array.from(clonedSelect.children).find((child) => nativeNode.value === child.getAttribute('value'));\n        if (selectedOption) {\n            selectedOption.setAttribute('selected', '');\n        }\n    }\n}\nfunction decorate(nativeNode, clonedNode) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        cloneCSSStyle(nativeNode, clonedNode);\n        clonePseudoElements(nativeNode, clonedNode);\n        cloneInputValue(nativeNode, clonedNode);\n        cloneSelectValue(nativeNode, clonedNode);\n    }\n    return clonedNode;\n}\nasync function ensureSVGSymbols(clone, options) {\n    const uses = clone.querySelectorAll ? clone.querySelectorAll('use') : [];\n    if (uses.length === 0) {\n        return clone;\n    }\n    const processedDefs = {};\n    for (let i = 0; i < uses.length; i++) {\n        const use = uses[i];\n        const id = use.getAttribute('xlink:href');\n        if (id) {\n            const exist = clone.querySelector(id);\n            const definition = document.querySelector(id);\n            if (!exist && definition && !processedDefs[id]) {\n                // eslint-disable-next-line no-await-in-loop\n                processedDefs[id] = (await cloneNode(definition, options, true));\n            }\n        }\n    }\n    const nodes = Object.values(processedDefs);\n    if (nodes.length) {\n        const ns = 'http://www.w3.org/1999/xhtml';\n        const svg = document.createElementNS(ns, 'svg');\n        svg.setAttribute('xmlns', ns);\n        svg.style.position = 'absolute';\n        svg.style.width = '0';\n        svg.style.height = '0';\n        svg.style.overflow = 'hidden';\n        svg.style.display = 'none';\n        const defs = document.createElementNS(ns, 'defs');\n        svg.appendChild(defs);\n        for (let i = 0; i < nodes.length; i++) {\n            defs.appendChild(nodes[i]);\n        }\n        clone.appendChild(svg);\n    }\n    return clone;\n}\nexport async function cloneNode(node, options, isRoot) {\n    if (!isRoot && options.filter && !options.filter(node)) {\n        return null;\n    }\n    return Promise.resolve(node)\n        .then((clonedNode) => cloneSingleNode(clonedNode, options))\n        .then((clonedNode) => cloneChildren(node, clonedNode, options))\n        .then((clonedNode) => decorate(node, clonedNode))\n        .then((clonedNode) => ensureSVGSymbols(clonedNode, options));\n}\n//# sourceMappingURL=clone-node.js.map","import { resolveUrl } from './util';\nimport { getMimeType } from './mimes';\nimport { isDataUrl, makeDataUrl, resourceToDataURL } from './dataurl';\nconst URL_REGEX = /url\\((['\"]?)([^'\"]+?)\\1\\)/g;\nconst URL_WITH_FORMAT_REGEX = /url\\([^)]+\\)\\s*format\\(([\"']?)([^\"']+)\\1\\)/g;\nconst FONT_SRC_REGEX = /src:\\s*(?:url\\([^)]+\\)\\s*format\\([^)]+\\)[,;]\\s*)+/g;\nfunction toRegex(url) {\n    // eslint-disable-next-line no-useless-escape\n    const escaped = url.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    return new RegExp(`(url\\\\(['\"]?)(${escaped})(['\"]?\\\\))`, 'g');\n}\nexport function parseURLs(cssText) {\n    const urls = [];\n    cssText.replace(URL_REGEX, (raw, quotation, url) => {\n        urls.push(url);\n        return raw;\n    });\n    return urls.filter((url) => !isDataUrl(url));\n}\nexport async function embed(cssText, resourceURL, baseURL, options, getContentFromUrl) {\n    try {\n        const resolvedURL = baseURL ? resolveUrl(resourceURL, baseURL) : resourceURL;\n        const contentType = getMimeType(resourceURL);\n        let dataURL;\n        if (getContentFromUrl) {\n            const content = await getContentFromUrl(resolvedURL);\n            dataURL = makeDataUrl(content, contentType);\n        }\n        else {\n            dataURL = await resourceToDataURL(resolvedURL, contentType, options);\n        }\n        return cssText.replace(toRegex(resourceURL), `$1${dataURL}$3`);\n    }\n    catch (error) {\n        // pass\n    }\n    return cssText;\n}\nfunction filterPreferredFontFormat(str, { preferredFontFormat }) {\n    return !preferredFontFormat\n        ? str\n        : str.replace(FONT_SRC_REGEX, (match) => {\n            // eslint-disable-next-line no-constant-condition\n            while (true) {\n                const [src, , format] = URL_WITH_FORMAT_REGEX.exec(match) || [];\n                if (!format) {\n                    return '';\n                }\n                if (format === preferredFontFormat) {\n                    return `src: ${src};`;\n                }\n            }\n        });\n}\nexport function shouldEmbed(url) {\n    return url.search(URL_REGEX) !== -1;\n}\nexport async function embedResources(cssText, baseUrl, options) {\n    if (!shouldEmbed(cssText)) {\n        return cssText;\n    }\n    const filteredCSSText = filterPreferredFontFormat(cssText, options);\n    const urls = parseURLs(filteredCSSText);\n    return urls.reduce((deferred, url) => deferred.then((css) => embed(css, url, baseUrl, options)), Promise.resolve(filteredCSSText));\n}\n//# sourceMappingURL=embed-resources.js.map","import { embedResources } from './embed-resources';\nimport { toArray, isInstanceOfElement } from './util';\nimport { isDataUrl, resourceToDataURL } from './dataurl';\nimport { getMimeType } from './mimes';\nasync function embedProp(propName, node, options) {\n    var _a;\n    const propValue = (_a = node.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue(propName);\n    if (propValue) {\n        const cssString = await embedResources(propValue, null, options);\n        node.style.setProperty(propName, cssString, node.style.getPropertyPriority(propName));\n        return true;\n    }\n    return false;\n}\nasync function embedBackground(clonedNode, options) {\n    if (!(await embedProp('background', clonedNode, options))) {\n        await embedProp('background-image', clonedNode, options);\n    }\n    if (!(await embedProp('mask', clonedNode, options))) {\n        await embedProp('mask-image', clonedNode, options);\n    }\n}\nasync function embedImageNode(clonedNode, options) {\n    const isImageElement = isInstanceOfElement(clonedNode, HTMLImageElement);\n    if (!(isImageElement && !isDataUrl(clonedNode.src)) &&\n        !(isInstanceOfElement(clonedNode, SVGImageElement) &&\n            !isDataUrl(clonedNode.href.baseVal))) {\n        return;\n    }\n    const url = isImageElement ? clonedNode.src : clonedNode.href.baseVal;\n    const dataURL = await resourceToDataURL(url, getMimeType(url), options);\n    await new Promise((resolve, reject) => {\n        clonedNode.onload = resolve;\n        clonedNode.onerror = reject;\n        const image = clonedNode;\n        if (image.decode) {\n            image.decode = resolve;\n        }\n        if (image.loading === 'lazy') {\n            image.loading = 'eager';\n        }\n        if (isImageElement) {\n            clonedNode.srcset = '';\n            clonedNode.src = dataURL;\n        }\n        else {\n            clonedNode.href.baseVal = dataURL;\n        }\n    });\n}\nasync function embedChildren(clonedNode, options) {\n    const children = toArray(clonedNode.childNodes);\n    const deferreds = children.map((child) => embedImages(child, options));\n    await Promise.all(deferreds).then(() => clonedNode);\n}\nexport async function embedImages(clonedNode, options) {\n    if (isInstanceOfElement(clonedNode, Element)) {\n        await embedBackground(clonedNode, options);\n        await embedImageNode(clonedNode, options);\n        await embedChildren(clonedNode, options);\n    }\n}\n//# sourceMappingURL=embed-images.js.map","export function applyStyle(node, options) {\n    const { style } = node;\n    if (options.backgroundColor) {\n        style.backgroundColor = options.backgroundColor;\n    }\n    if (options.width) {\n        style.width = `${options.width}px`;\n    }\n    if (options.height) {\n        style.height = `${options.height}px`;\n    }\n    const manual = options.style;\n    if (manual != null) {\n        Object.keys(manual).forEach((key) => {\n            style[key] = manual[key];\n        });\n    }\n    return node;\n}\n//# sourceMappingURL=apply-style.js.map","import { toArray } from './util';\nimport { fetchAsDataURL } from './dataurl';\nimport { shouldEmbed, embedResources } from './embed-resources';\nconst cssFetchCache = {};\nasync function fetchCSS(url) {\n    let cache = cssFetchCache[url];\n    if (cache != null) {\n        return cache;\n    }\n    const res = await fetch(url);\n    const cssText = await res.text();\n    cache = { url, cssText };\n    cssFetchCache[url] = cache;\n    return cache;\n}\nasync function embedFonts(data, options) {\n    let cssText = data.cssText;\n    const regexUrl = /url\\([\"']?([^\"')]+)[\"']?\\)/g;\n    const fontLocs = cssText.match(/url\\([^)]+\\)/g) || [];\n    const loadFonts = fontLocs.map(async (loc) => {\n        let url = loc.replace(regexUrl, '$1');\n        if (!url.startsWith('https://')) {\n            url = new URL(url, data.url).href;\n        }\n        return fetchAsDataURL(url, options.fetchRequestInit, ({ result }) => {\n            cssText = cssText.replace(loc, `url(${result})`);\n            return [loc, result];\n        });\n    });\n    return Promise.all(loadFonts).then(() => cssText);\n}\nfunction parseCSS(source) {\n    if (source == null) {\n        return [];\n    }\n    const result = [];\n    const commentsRegex = /(\\/\\*[\\s\\S]*?\\*\\/)/gi;\n    // strip out comments\n    let cssText = source.replace(commentsRegex, '');\n    // eslint-disable-next-line prefer-regex-literals\n    const keyframesRegex = new RegExp('((@.*?keyframes [\\\\s\\\\S]*?){([\\\\s\\\\S]*?}\\\\s*?)})', 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const matches = keyframesRegex.exec(cssText);\n        if (matches === null) {\n            break;\n        }\n        result.push(matches[0]);\n    }\n    cssText = cssText.replace(keyframesRegex, '');\n    const importRegex = /@import[\\s\\S]*?url\\([^)]*\\)[\\s\\S]*?;/gi;\n    // to match css & media queries together\n    const combinedCSSRegex = '((\\\\s*?(?:\\\\/\\\\*[\\\\s\\\\S]*?\\\\*\\\\/)?\\\\s*?@media[\\\\s\\\\S]' +\n        '*?){([\\\\s\\\\S]*?)}\\\\s*?})|(([\\\\s\\\\S]*?){([\\\\s\\\\S]*?)})';\n    // unified regex\n    const unifiedRegex = new RegExp(combinedCSSRegex, 'gi');\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        let matches = importRegex.exec(cssText);\n        if (matches === null) {\n            matches = unifiedRegex.exec(cssText);\n            if (matches === null) {\n                break;\n            }\n            else {\n                importRegex.lastIndex = unifiedRegex.lastIndex;\n            }\n        }\n        else {\n            unifiedRegex.lastIndex = importRegex.lastIndex;\n        }\n        result.push(matches[0]);\n    }\n    return result;\n}\nasync function getCSSRules(styleSheets, options) {\n    const ret = [];\n    const deferreds = [];\n    // First loop inlines imports\n    styleSheets.forEach((sheet) => {\n        if ('cssRules' in sheet) {\n            try {\n                toArray(sheet.cssRules || []).forEach((item, index) => {\n                    if (item.type === CSSRule.IMPORT_RULE) {\n                        let importIndex = index + 1;\n                        const url = item.href;\n                        const deferred = fetchCSS(url)\n                            .then((metadata) => embedFonts(metadata, options))\n                            .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                            try {\n                                sheet.insertRule(rule, rule.startsWith('@import')\n                                    ? (importIndex += 1)\n                                    : sheet.cssRules.length);\n                            }\n                            catch (error) {\n                                console.error('Error inserting rule from remote css', {\n                                    rule,\n                                    error,\n                                });\n                            }\n                        }))\n                            .catch((e) => {\n                            console.error('Error loading remote css', e.toString());\n                        });\n                        deferreds.push(deferred);\n                    }\n                });\n            }\n            catch (e) {\n                const inline = styleSheets.find((a) => a.href == null) || document.styleSheets[0];\n                if (sheet.href != null) {\n                    deferreds.push(fetchCSS(sheet.href)\n                        .then((metadata) => embedFonts(metadata, options))\n                        .then((cssText) => parseCSS(cssText).forEach((rule) => {\n                        inline.insertRule(rule, sheet.cssRules.length);\n                    }))\n                        .catch((err) => {\n                        console.error('Error loading remote stylesheet', err);\n                    }));\n                }\n                console.error('Error inlining remote css file', e);\n            }\n        }\n    });\n    return Promise.all(deferreds).then(() => {\n        // Second loop parses rules\n        styleSheets.forEach((sheet) => {\n            if ('cssRules' in sheet) {\n                try {\n                    toArray(sheet.cssRules || []).forEach((item) => {\n                        ret.push(item);\n                    });\n                }\n                catch (e) {\n                    console.error(`Error while reading CSS rules from ${sheet.href}`, e);\n                }\n            }\n        });\n        return ret;\n    });\n}\nfunction getWebFontRules(cssRules) {\n    return cssRules\n        .filter((rule) => rule.type === CSSRule.FONT_FACE_RULE)\n        .filter((rule) => shouldEmbed(rule.style.getPropertyValue('src')));\n}\nasync function parseWebFontRules(node, options) {\n    if (node.ownerDocument == null) {\n        throw new Error('Provided element is not within a Document');\n    }\n    const styleSheets = toArray(node.ownerDocument.styleSheets);\n    const cssRules = await getCSSRules(styleSheets, options);\n    return getWebFontRules(cssRules);\n}\nexport async function getWebFontCSS(node, options) {\n    const rules = await parseWebFontRules(node, options);\n    const cssTexts = await Promise.all(rules.map((rule) => {\n        const baseUrl = rule.parentStyleSheet ? rule.parentStyleSheet.href : null;\n        return embedResources(rule.cssText, baseUrl, options);\n    }));\n    return cssTexts.join('\\n');\n}\nexport async function embedWebFonts(clonedNode, options) {\n    const cssText = options.fontEmbedCSS != null\n        ? options.fontEmbedCSS\n        : options.skipFonts\n            ? null\n            : await getWebFontCSS(clonedNode, options);\n    if (cssText) {\n        const styleNode = document.createElement('style');\n        const sytleContent = document.createTextNode(cssText);\n        styleNode.appendChild(sytleContent);\n        if (clonedNode.firstChild) {\n            clonedNode.insertBefore(styleNode, clonedNode.firstChild);\n        }\n        else {\n            clonedNode.appendChild(styleNode);\n        }\n    }\n}\n//# sourceMappingURL=embed-webfonts.js.map","import { cloneNode } from './clone-node';\nimport { embedImages } from './embed-images';\nimport { applyStyle } from './apply-style';\nimport { embedWebFonts, getWebFontCSS } from './embed-webfonts';\nimport { getImageSize, getPixelRatio, createImage, canvasToBlob, nodeToDataURL, checkCanvasDimensions, } from './util';\nexport async function toSvg(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const clonedNode = (await cloneNode(node, options, true));\n    await embedWebFonts(clonedNode, options);\n    await embedImages(clonedNode, options);\n    applyStyle(clonedNode, options);\n    const datauri = await nodeToDataURL(clonedNode, width, height);\n    return datauri;\n}\nexport async function toCanvas(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const svg = await toSvg(node, options);\n    const img = await createImage(svg);\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    const ratio = options.pixelRatio || getPixelRatio();\n    const canvasWidth = options.canvasWidth || width;\n    const canvasHeight = options.canvasHeight || height;\n    canvas.width = canvasWidth * ratio;\n    canvas.height = canvasHeight * ratio;\n    if (!options.skipAutoScale) {\n        checkCanvasDimensions(canvas);\n    }\n    canvas.style.width = `${canvasWidth}`;\n    canvas.style.height = `${canvasHeight}`;\n    if (options.backgroundColor) {\n        context.fillStyle = options.backgroundColor;\n        context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    return canvas;\n}\nexport async function toPixelData(node, options = {}) {\n    const { width, height } = getImageSize(node, options);\n    const canvas = await toCanvas(node, options);\n    const ctx = canvas.getContext('2d');\n    return ctx.getImageData(0, 0, width, height).data;\n}\nexport async function toPng(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL();\n}\nexport async function toJpeg(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    return canvas.toDataURL('image/jpeg', options.quality || 1);\n}\nexport async function toBlob(node, options = {}) {\n    const canvas = await toCanvas(node, options);\n    const blob = await canvasToBlob(canvas);\n    return blob;\n}\nexport async function getFontEmbedCSS(node, options = {}) {\n    return getWebFontCSS(node, options);\n}\n//# sourceMappingURL=index.js.map","export interface ScrollmeterTimelineOptions {\n  color?: string\n  width?: number\n}\n\nexport interface ScrollmeterBarOptions {\n  color?: string\n  background?: string\n  height?: number\n}\n\nexport interface ScrollmeterTooltipOptions {\n  background?: string\n  fontColor?: string\n  fontSize?: number\n  paddingBlock?: number\n  paddingInline?: number\n  width?: number\n}\n\nexport interface ScrollmeterOptions {\n  targetId: string\n  useTimeline?: boolean\n  useTooltip?: boolean\n  usePreview?: boolean\n  barOptions?: ScrollmeterBarOptions\n  timelineOptions?: ScrollmeterTimelineOptions\n  tooltipOptions?: ScrollmeterTooltipOptions\n}\n\nexport abstract class IScrollmeter {\n  protected abstract setCSSCustomProperties(): void\n}\n","import styles from '../styles/scrollmeter.module.scss'\nimport { IScrollmeter } from '../types/scrollmeter.types'\nimport { Scrollmeter } from './scrollmeter'\n\nexport class ScrollmeterTooltip extends IScrollmeter {\n    #scrollmeter: Scrollmeter\n\n    constructor(scrollmeter: Scrollmeter) {\n        super()\n        this.#scrollmeter = scrollmeter\n    }\n\n    #cropImageAtPercent = (targetElement: HTMLElement, cropWidth: number = 320) => {\n        const captureCanvas = this.#scrollmeter.getCaptureCanvas()\n\n        if (!captureCanvas) return\n\n        const canvasWidth = captureCanvas.width\n        const canvasHeight = (canvasWidth * 9) / 16 // 16:9 비율 계산\n        const y = Math.max(0, targetElement.getBoundingClientRect().top + window.scrollY - canvasHeight / 2)\n\n        const cropHeight = (cropWidth * 9) / 16 // 16:9 비율 계산\n\n        const tempCanvas = document.createElement('canvas')\n        tempCanvas.width = cropWidth\n        tempCanvas.height = cropHeight\n\n        const ctx = tempCanvas.getContext('2d')\n        if (!ctx) return null\n\n        // 크롭된 영역 그리기\n        ctx.drawImage(\n            captureCanvas,\n            0,\n            Math.max(0, Math.min(y, captureCanvas.height - canvasHeight)), // y값 범위 제한\n            canvasWidth,\n            canvasHeight,\n            0,\n            0,\n            cropWidth,\n            cropHeight\n        )\n\n        return tempCanvas.toDataURL()\n    }\n\n    #createPreview = (dataUrl: string) => {\n        const div = document.createElement('div')\n        div.classList.add(styles.scrollmeter_timeline_preview)\n\n        const img = new Image()\n\n        img.src = dataUrl\n\n        div.appendChild(img)\n        return div\n    }\n\n    public createTimelineTooltip = (\n        timelineElement: HTMLDivElement,\n        targetElement: HTMLElement,\n        direction: 'left' | 'right' | 'center'\n    ) => {\n        if (!targetElement.textContent) return\n        const timelineTooltip = document.createElement('div')\n        const timelineTooltipText = document.createElement('p')\n\n        if (this.#scrollmeter.getDefaultOptions().usePreview) {\n            const dataUrl = this.#cropImageAtPercent(targetElement)\n\n            if (dataUrl) {\n                const preview = this.#createPreview(dataUrl)\n                timelineTooltip.appendChild(preview)\n            }\n        }\n\n        timelineTooltip.classList.add(styles.scrollmeter_timeline_tooltip)\n        timelineTooltip.classList.add(styles[`scrollmeter_timeline_tooltip_${direction}`])\n\n        timelineTooltipText.textContent = targetElement.textContent\n\n        timelineTooltip.appendChild(timelineTooltipText)\n\n        this.setCSSCustomProperties()\n\n        timelineElement.appendChild(timelineTooltip)\n    }\n\n    protected setCSSCustomProperties() {\n        const defaultOptions = this.#scrollmeter.getDefaultOptions()\n\n        // css custom\n        if (defaultOptions && defaultOptions.tooltipOptions) {\n            const { background, fontColor, fontSize, paddingBlock, paddingInline, width } = defaultOptions.tooltipOptions\n\n            if (background) {\n                this.#scrollmeter.getScrollmeterContainer()?.style.setProperty('--scrollmeter-tooltip-background', background)\n            }\n            if (fontColor) {\n                this.#scrollmeter.getScrollmeterContainer()?.style.setProperty('--scrollmeter-tooltip-font-color', fontColor)\n            }\n            if (fontSize) {\n                this.#scrollmeter.getScrollmeterContainer()?.style.setProperty('--scrollmeter-tooltip-font-size', `${fontSize}px`)\n            }\n            if (paddingBlock) {\n                this.#scrollmeter.getScrollmeterContainer()?.style.setProperty('--scrollmeter-tooltip-padding-block', `${paddingBlock}px`)\n            }\n            if (paddingInline) {\n                this.#scrollmeter.getScrollmeterContainer()?.style.setProperty('--scrollmeter-tooltip-padding-inline', `${paddingInline}px`)\n            }\n            if (width) {\n                this.#scrollmeter.getScrollmeterContainer()?.style.setProperty('--scrollmeter-tooltip-width', `${width}px`)\n            }\n        }\n    }\n}\n","import styles from '../styles/scrollmeter.module.scss'\nimport { IScrollmeter } from '../types/scrollmeter.types'\nimport { Scrollmeter } from './scrollmeter'\nimport { ScrollmeterTooltip } from './scrollmeter-tooltip'\n\nexport class ScrollmeterTimeline extends IScrollmeter {\n    #scrollmeter: Scrollmeter\n\n    constructor(scrollmeter: Scrollmeter) {\n        super()\n        this.#scrollmeter = scrollmeter\n    }\n\n    #findTimelineElements = (element: HTMLElement): HTMLElement[] => {\n        const elArray: HTMLElement[] = []\n\n        const searchH1 = (el: HTMLElement) => {\n            if (el.tagName.toLowerCase() === 'h1') {\n                if (this.#isElementVisible(el)) {\n                    elArray.push(el as HTMLHeadingElement)\n                }\n            }\n\n            Array.from(el.children).forEach((child) => {\n                searchH1(child as HTMLElement)\n            })\n        }\n\n        searchH1(element)\n\n        return elArray\n    }\n\n    #isElementVisible(element: HTMLElement): boolean {\n        // 요소 자체나 부모 요소들의 style 체크\n        const style = window.getComputedStyle(element)\n        if (style.display === 'none') return false\n        if (style.visibility === 'hidden') return false\n        if (style.opacity === '0') return false\n\n        // 부모 요소들도 순차적으로 확인\n        let currentElement: HTMLElement | null = element.parentElement\n        while (currentElement) {\n            const parentStyle = window.getComputedStyle(currentElement)\n            if (parentStyle.display === 'none') return false\n            if (parentStyle.visibility === 'hidden') return false\n            if (parentStyle.opacity === '0') return false\n            currentElement = currentElement.parentElement\n        }\n\n        return true\n    }\n\n    public createTimeline = (highestZIndex: number): ScrollmeterTimeline => {\n        const targetContainer = this.#scrollmeter.getTargetContainer()\n        if (!targetContainer) return null\n\n        const targetElement = this.#findTimelineElements(targetContainer)\n\n        if (targetElement.length === 0) return null\n\n        const timelineElements: HTMLElement[] = []\n        const timelineWidth = this.#scrollmeter.getDefaultOptions().timelineOptions?.width ?? 4\n        let outOfBoundIndex = targetElement.length\n\n        targetElement.map((element) => {\n            const scrollContainer = this.#scrollmeter.getTargetContainer()\n\n            if (!scrollContainer) return\n\n            const timelineElement = document.createElement('div')\n            timelineElement.classList.add(styles.scrollmeter_timeline)\n\n            const absoluteElementTop = element.getBoundingClientRect().top + window.scrollY\n            const absoluteContainerTop = scrollContainer.getBoundingClientRect().top + window.scrollY\n            const relativeTargetTop = absoluteElementTop - absoluteContainerTop\n            const scrollableHeight = scrollContainer.clientHeight - document.documentElement.clientHeight\n\n            timelineElement.style.zIndex = highestZIndex.toString()\n\n            timelineElement.addEventListener('pointerdown', () => {\n                element.scrollIntoView({ behavior: 'smooth' })\n            })\n\n            if (scrollableHeight > absoluteElementTop) {\n                const relativePosition = (relativeTargetTop / scrollableHeight) * 100\n\n                timelineElement.style.left = `${relativePosition > 100 ? `calc(100% - ${timelineWidth}px)` : `${relativePosition}%`}`\n\n                if (this.#scrollmeter.getDefaultOptions().useTooltip) {\n                    const tooltip = new ScrollmeterTooltip(this.#scrollmeter)\n\n                    tooltip.createTimelineTooltip(timelineElement, element, relativePosition < 7.6 ? 'left' : 'center')\n                }\n            } else {\n                timelineElement.style.left = `calc(100% - ${timelineWidth * (outOfBoundIndex-- * 4)}px)`\n\n                if (this.#scrollmeter.getDefaultOptions().useTooltip) {\n                    const tooltip = new ScrollmeterTooltip(this.#scrollmeter)\n\n                    tooltip.createTimelineTooltip(timelineElement, element, 'right')\n                }\n            }\n\n            this.#scrollmeter.getScrollmeterContainer()?.appendChild(timelineElement)\n            timelineElements.push(timelineElement)\n        })\n\n        this.setCSSCustomProperties()\n\n        return this\n    }\n\n    public setCSSCustomProperties() {\n        const defaultOptions = this.#scrollmeter.getDefaultOptions()\n        // css custom\n        if (defaultOptions && defaultOptions.timelineOptions) {\n            const { color, width } = defaultOptions.timelineOptions\n\n            if (color) {\n                this.#scrollmeter.getScrollmeterContainer()?.style.setProperty('--scrollmeter-timeline-color', color)\n            }\n            if (width) {\n                this.#scrollmeter.getScrollmeterContainer()?.style.setProperty('--scrollmeter-timeline-width', `${width}px`)\n            }\n        }\n    }\n}\n","import * as htmlToImage from 'html-to-image'\nimport styles from '../styles/scrollmeter.module.scss'\nimport { IScrollmeter, ScrollmeterOptions } from '../types/scrollmeter.types'\nimport { ScrollmeterTimeline } from './scrollmeter-timeline'\n\nexport class Scrollmeter extends IScrollmeter {\n    #defaultOptions: ScrollmeterOptions\n    #targetContainer: HTMLElement | null\n    #scrollmeterContainer: HTMLDivElement | null\n    #scrollmeterBar: HTMLDivElement | null\n    #resizeObserver: ResizeObserver | null\n\n    #timelineElements: ScrollmeterTimeline | null\n\n    #captureCanvas: HTMLCanvasElement | null\n\n    #containerHeight: number\n    #barWidth: number\n    #totalHeight: number\n    #elementTop: number\n    #highestZIndex: number\n\n    #isInView: boolean\n\n    constructor(options: ScrollmeterOptions) {\n        super()\n        const { targetId } = options\n        this.#defaultOptions = options\n\n        this.#targetContainer = document.getElementById(targetId) ?? null\n        this.#scrollmeterContainer = null\n        this.#scrollmeterBar = null\n        this.#resizeObserver = null\n        this.#captureCanvas = null\n        this.#timelineElements = null\n\n        // 숫자 필드 초기화\n        this.#containerHeight = 0\n        this.#barWidth = 0\n        this.#totalHeight = 0\n        this.#elementTop = 0\n        this.#highestZIndex = 0\n\n        this.#isInView = false\n\n        this.#initResizeObserver()\n\n        this.#createScrollmeter()\n    }\n\n    #initResizeObserver = () => {\n        if (!this.#targetContainer) {\n            throw new Error('targetContainer is not found')\n        }\n\n        this.#resizeObserver = new ResizeObserver(async (entries) => {\n            if (!this.#targetContainer) return\n\n            if (!this.#scrollmeterContainer || this.#containerHeight === entries[0].contentRect.height) return\n\n            this.#containerHeight = entries[0].contentRect.height\n\n            const marginTop = parseInt(window.getComputedStyle(this.#targetContainer).marginTop)\n            const marginBottom = parseInt(window.getComputedStyle(this.#targetContainer).marginBottom)\n            this.#elementTop = window.scrollY + this.#targetContainer.getBoundingClientRect().top\n            this.#totalHeight = this.#targetContainer.clientHeight + marginTop + marginBottom - document.documentElement.clientHeight\n\n            this.#updateBarWidth()\n\n            if (this.#defaultOptions.useTimeline) {\n                document.querySelectorAll(`.${styles.scrollmeter_timeline}`).forEach((element) => {\n                    element.remove()\n                })\n\n                if (this.#defaultOptions.usePreview) {\n                    this.#debouncedCaptureContainer()\n                } else {\n                    const timeline = new ScrollmeterTimeline(this)\n\n                    this.#timelineElements = timeline.createTimeline(this.#highestZIndex)\n                }\n            }\n        })\n    }\n\n    #createScrollmeterContainer = () => {\n        try {\n            if (!this.#targetContainer) throw new Error('targetContainer is not found')\n\n            const scrollmeterContainer = document.createElement('div') as HTMLDivElement\n            scrollmeterContainer.classList.add(styles.scrollmeter_container)\n\n            const highestZIndex = this.#findHighestZIndex(this.#targetContainer)\n            this.#highestZIndex = highestZIndex\n            scrollmeterContainer.style.zIndex = highestZIndex.toString()\n\n            const scrollmeterBar = this.#createScrollmeterBar()\n            scrollmeterContainer.appendChild(scrollmeterBar)\n\n            this.#scrollmeterContainer = scrollmeterContainer\n\n            this.setCSSCustomProperties()\n\n            return scrollmeterContainer\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    #createScrollmeterBar = () => {\n        const scrollmeterBar = document.createElement('div')\n        scrollmeterBar.classList.add(styles.scrollmeter_bar)\n\n        this.#scrollmeterBar = scrollmeterBar\n\n        return scrollmeterBar\n    }\n\n    #findHighestZIndex = (element: HTMLElement) => {\n        let highest = 0\n\n        const zIndex = window.getComputedStyle(element).zIndex\n\n        if (zIndex !== 'auto') {\n            highest = Math.max(highest, parseInt(zIndex))\n        }\n\n        Array.from(element.children).forEach((child) => {\n            highest = Math.max(highest, this.#findHighestZIndex(child as HTMLElement))\n        })\n\n        return highest + 1\n    }\n\n    #updateBarWidth = () => {\n        if (!this.#targetContainer) return\n        if (!this.#isInView) return\n\n        const isVisibleScrollmeter = this.#isVisibleScrollmeter()\n\n        if (!isVisibleScrollmeter) {\n            this.#scrollmeterContainer!.style.opacity = '0'\n            return\n        }\n\n        this.#scrollmeterContainer!.style.opacity = '1'\n\n        const currentScroll = window.scrollY - this.#elementTop\n        const scrollPercentage = (currentScroll / this.#totalHeight) * 100\n\n        this.#barWidth = Math.min(100, Math.max(0, scrollPercentage))\n\n        if (this.#scrollmeterBar) {\n            this.#scrollmeterBar.style.width = `${this.#barWidth}%`\n        }\n    }\n\n    #throttle = (func: Function, limit: number) => {\n        let inThrottle: boolean = false\n\n        return () => {\n            if (!inThrottle) {\n                func.apply(this)\n                inThrottle = true\n                setTimeout(() => {\n                    inThrottle = false\n                }, limit)\n            }\n        }\n    }\n\n    #throttledUpdateBarWidth = this.#throttle(this.#updateBarWidth, 16)\n\n    #isVisibleScrollmeter = () => {\n        if (!this.#targetContainer) return false\n\n        return this.#targetContainer.getBoundingClientRect().top <= 0 && this.#targetContainer.getBoundingClientRect().bottom > 0\n    }\n\n    #debounce = (func: Function, wait: number) => {\n        let timeout: ReturnType<typeof setTimeout> | null = null\n\n        return (...args: any[]) => {\n            if (timeout) clearTimeout(timeout)\n            timeout = setTimeout(() => {\n                func.apply(this, args)\n                timeout = null\n            }, wait)\n        }\n    }\n\n    #debouncedCaptureContainer = this.#debounce(async () => {\n        if (this.#defaultOptions.usePreview) {\n            await this.#captureContainer()\n\n            const timeline = new ScrollmeterTimeline(this)\n\n            this.#timelineElements = timeline.createTimeline(this.#highestZIndex)\n        }\n    }, 300)\n\n    #captureContainer = async () => {\n        if (!this.#targetContainer) return\n\n        try {\n            // 전체 문서 크기 계산\n            const docWidth = Math.max(\n                document.documentElement.scrollWidth,\n                document.documentElement.offsetWidth,\n                document.documentElement.clientWidth\n            )\n            const docHeight = Math.max(\n                document.documentElement.scrollHeight,\n                document.documentElement.offsetHeight,\n                document.documentElement.clientHeight\n            )\n\n            // DOM 업데이트를 위한 대기\n            await new Promise((resolve) => setTimeout(resolve, 100))\n\n            const canvas = await htmlToImage.toCanvas(document.documentElement, {\n                width: docWidth,\n                height: docHeight,\n                filter: (node) => {\n                    return !(node instanceof HTMLElement && node.classList?.contains(styles.scrollmeter_container))\n                },\n                backgroundColor: getComputedStyle(document.body).backgroundColor || '#ffffff',\n            })\n\n            this.#captureCanvas = canvas\n\n            return canvas\n        } catch (error) {\n            console.error('미리보기 생성 중 오류 발생:', error)\n            return null\n        }\n    }\n\n    #createScrollmeter = () => {\n        try {\n            if (!this.#targetContainer) throw new Error('targetContainer is not found')\n\n            const existingScrollmeter = document.querySelectorAll(`.${styles.scrollmeter_container}`)\n\n            if (existingScrollmeter.length > 0) {\n                return null\n            }\n\n            if (!this.#resizeObserver) {\n                throw new Error('resizeObserver is not found')\n            }\n\n            const container = this.#createScrollmeterContainer()\n\n            if (!container) throw new Error('scrollmetercontainer is not found')\n\n            this.#targetContainer.appendChild(container)\n\n            this.#resizeObserver.observe(this.#targetContainer)\n\n            const observer = new IntersectionObserver((entries) => {\n                entries.forEach((entry) => {\n                    if (entry.isIntersecting) {\n                        this.#isInView = true\n                        this.#updateBarWidth()\n                    } else {\n                        this.#isInView = false\n                    }\n                })\n            })\n\n            observer.observe(this.#targetContainer)\n\n            window.addEventListener('scroll', this.#throttledUpdateBarWidth)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    protected setCSSCustomProperties = () => {\n        if (!this.#scrollmeterContainer) return\n        // css custom\n        if (this.#defaultOptions.barOptions) {\n            const { color, background, height } = this.#defaultOptions.barOptions\n            if (color) {\n                this.#scrollmeterContainer.style.setProperty('--scrollmeter-bar-color', color)\n            }\n            if (background) {\n                this.#scrollmeterContainer.style.setProperty('--scrollmeter-bar-background', background)\n            }\n            if (height) {\n                this.#scrollmeterContainer.style.setProperty('--scrollmeter-bar-height', `${height}px`)\n            }\n        }\n    }\n\n    public getTargetContainer = () => {\n        return this.#targetContainer\n    }\n\n    public getScrollmeterContainer = () => {\n        return this.#scrollmeterContainer\n    }\n\n    public getCaptureCanvas = () => {\n        return this.#captureCanvas || null\n    }\n\n    public getDefaultOptions = () => {\n        return this.#defaultOptions\n    }\n\n    public updateScrollmeterStyle = (options: ScrollmeterOptions) => {\n        this.#defaultOptions = options\n\n        this.setCSSCustomProperties()\n\n        this.#timelineElements?.setCSSCustomProperties()\n\n        // css custom\n        if (this.#defaultOptions && this.#defaultOptions.tooltipOptions) {\n            const { background, fontColor, fontSize, paddingBlock, paddingInline, width } = this.#defaultOptions.tooltipOptions\n\n            if (background) {\n                this.#scrollmeterContainer.style.setProperty('--scrollmeter-tooltip-background', background)\n            }\n            if (fontColor) {\n                this.#scrollmeterContainer.style.setProperty('--scrollmeter-tooltip-font-color', fontColor)\n            }\n            if (fontSize) {\n                this.#scrollmeterContainer.style.setProperty('--scrollmeter-tooltip-font-size', `${fontSize}px`)\n            }\n            if (paddingBlock) {\n                this.#scrollmeterContainer.style.setProperty('--scrollmeter-tooltip-padding-block', `${paddingBlock}px`)\n            }\n            if (paddingInline) {\n                this.#scrollmeterContainer.style.setProperty('--scrollmeter-tooltip-padding-inline', `${paddingInline}px`)\n            }\n            if (width) {\n                this.#scrollmeterContainer.style.setProperty('--scrollmeter-tooltip-width', `${width}px`)\n            }\n        }\n    }\n}\n","import { Scrollmeter } from './class/scrollmeter'\nimport { ScrollmeterOptions } from './types/scrollmeter.types'\n\nexport const createScrollmeter = (options: ScrollmeterOptions): Scrollmeter | null => {\n    try {\n        return new Scrollmeter(options)\n    } catch (error) {\n        console.error(error)\n        return null\n    }\n}\n"],"names":["resolveUrl","url","baseUrl","doc","base","a","uuid","counter","random","toArray","arrayLike","arr","l","px","node","styleProperty","val","getNodeWidth","leftBorder","rightBorder","getNodeHeight","topBorder","bottomBorder","getImageSize","targetNode","options","width","height","getPixelRatio","ratio","FINAL_PROCESS","canvasDimensionLimit","checkCanvasDimensions","canvas","createImage","resolve","reject","img","svgToDataURL","svg","html","nodeToDataURL","xmlns","foreignObject","isInstanceOfElement","instance","nodePrototype","formatCSSText","style","content","formatCSSProperties","name","value","priority","getPseudoElementStyle","className","pseudo","selector","cssText","clonePseudoElement","nativeNode","clonedNode","styleElement","clonePseudoElements","WOFF","JPEG","mimes","getExtension","match","getMimeType","extension","getContentFromDataUrl","dataURL","isDataUrl","makeDataUrl","mimeType","fetchAsDataURL","init","process","res","blob","reader","error","cache","getCacheKey","contentType","includeQueryParams","key","resourceToDataURL","resourceUrl","cacheKey","result","msg","cloneCanvasElement","cloneVideoElement","video","ctx","poster","cloneIFrameElement","iframe","_a","cloneNode","cloneSingleNode","isSlotElement","cloneChildren","_b","children","deferred","child","clonedChild","cloneCSSStyle","targetStyle","sourceStyle","cloneInputValue","cloneSelectValue","clonedSelect","selectedOption","decorate","ensureSVGSymbols","clone","uses","processedDefs","i","id","exist","definition","nodes","ns","defs","isRoot","URL_REGEX","URL_WITH_FORMAT_REGEX","FONT_SRC_REGEX","toRegex","escaped","parseURLs","urls","raw","quotation","embed","resourceURL","baseURL","getContentFromUrl","resolvedURL","filterPreferredFontFormat","str","preferredFontFormat","src","format","shouldEmbed","embedResources","filteredCSSText","css","embedProp","propName","propValue","cssString","embedBackground","embedImageNode","isImageElement","image","embedChildren","deferreds","embedImages","applyStyle","manual","cssFetchCache","fetchCSS","embedFonts","data","regexUrl","loadFonts","loc","parseCSS","source","commentsRegex","keyframesRegex","matches","importRegex","combinedCSSRegex","unifiedRegex","getCSSRules","styleSheets","ret","sheet","item","index","importIndex","metadata","rule","e","inline","err","getWebFontRules","cssRules","parseWebFontRules","getWebFontCSS","rules","embedWebFonts","styleNode","sytleContent","toSvg","toCanvas","context","canvasWidth","canvasHeight","IScrollmeter","ScrollmeterTooltip","scrollmeter","__privateAdd","_scrollmeter","_cropImageAtPercent","_createPreview","__privateSet","targetElement","cropWidth","captureCanvas","__privateGet","y","cropHeight","tempCanvas","dataUrl","div","styles","timelineElement","direction","timelineTooltip","timelineTooltipText","preview","defaultOptions","background","fontColor","fontSize","paddingBlock","paddingInline","_c","_d","_e","_f","ScrollmeterTimeline","_ScrollmeterTimeline_instances","_findTimelineElements","element","elArray","searchH1","el","__privateMethod","isElementVisible_fn","highestZIndex","targetContainer","timelineWidth","outOfBoundIndex","scrollContainer","absoluteElementTop","absoluteContainerTop","relativeTargetTop","scrollableHeight","relativePosition","color","currentElement","parentStyle","Scrollmeter","_defaultOptions","_targetContainer","_scrollmeterContainer","_scrollmeterBar","_resizeObserver","_timelineElements","_captureCanvas","_containerHeight","_barWidth","_totalHeight","_elementTop","_highestZIndex","_isInView","_initResizeObserver","_createScrollmeterContainer","_createScrollmeterBar","_findHighestZIndex","_updateBarWidth","_throttle","_throttledUpdateBarWidth","_isVisibleScrollmeter","_debounce","_debouncedCaptureContainer","_captureContainer","_createScrollmeter","entries","marginTop","marginBottom","timeline","scrollmeterContainer","scrollmeterBar","highest","zIndex","scrollPercentage","func","limit","inThrottle","wait","timeout","args","docWidth","docHeight","htmlToImage.toCanvas","container","entry","targetId","createScrollmeter"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}